    .engine mycomputer

    .include "constants.asm"
    .include "test.fast.mac.asm"
    
    .include "IOSerial.asm"
    
    LD SP,DSTACK
    CALL init
    JP testsStart
    
    .include "MONDO.asm"
    .include "ram.asm"
    
    .org $4000

testsStart:

    ; test "0 1 - \\c + ", 1
    ; CALL printStr
    ; .cstr "Done!!\r\n"
    ; HALT

    test "1", 1
    test "1", 1
    test "0", 0
    test "10", 10
    test "$10", $10
    test "$FF", $FF
    test "2 3=", 0
    test "3 3=", 1
    test "2 3<", 1
    test "3 3<", 0
    test "3 3>", 0
    test "4 3>", 1
    test "1 2+", 3
    test "123 456+", 123+456
    test "64 128+", 64+128
    test "5 3-", 2
    test "-1 2+",1
    test "-1 1+",0
    test "$FFFF 1 + \\c +", 1
    test "0 1 - \\c +", 0
    test "3 5&", 1
    test "3 5|", 7
    test "$AA $55 \\X", $FF
    test "1{", 2
    test "1}", 0
    test "2}", 1

    test "2 3 *", 6
    test "$FFFF 2 * \\r +", -1
    test "$FFFF $FFFF * \\r +", -1
    test "1 2 3+*", 5

    test "5 2/", 2
    test "5 2/ \\r", 1
    test "2a!a",2
    test "3x! 1 x+x! x", 4
    test "3x! -1 x+x! x", 2
    test "1 a ! a++ a ", 1
    test "1 a ! a-- a ", 0
    test "1 a ! a~ a ", 0
    test "0 a ! a~ a ", 1
    test ":X1;X^", 1
    test ":X10;X^", 10
    test ":A100;A^", 100
    test ":Aa!; 3A^ a", 3
    test ":Aa!;:Ba;4A^B^", 4
    test "\\b", 0

    test "0 0(1+)", 0
    test "0 1(1+)", 1
    test "0 2(1+)", 2
    test "0 1(0(1+))", 0
    test "0 1(1(1+))", 1
    test "0 2(1(1+))", 2
    test "0 2(2(1+))", 4
    test "0 1(\\i+)", 0
    test "0 2(\\i+)", 1
    test "0 3(\\i+)", 3
    test "0 2(2(\\i\\j+ +))", 4
    test "0 3(3(\\i\\j+ +))", 18
    test "0t! 10(1 t+t!) t",10
    test "0(100)(200)",200
    test "1(100)(200)",100
    test "0t! 10(\\i 4<\\W \\i 1 t+t!) t",4

    test "2x! x", 2
    test "[]\\A", 0
    test "[3]\\A", 1
    test "[3]0#", 3
    test "[1 2 3]0#", 1
    test "[1 2 3]1#", 2
    test "\\b\\B\\b", 1
    test "\\B[]\\A", 0
    test "\\B[3]\\A", 1
    test "\\B[3]0#", 3
    test "\\B[1 2 3]0#", 1
    test "\\B[1 2 3]1#", 2
    test "\\B'A'0#",65

    CALL enter
    .cstr "`Done!`"
    HALT
    